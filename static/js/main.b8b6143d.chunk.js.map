{"version":3,"sources":["assets/images/me.png","assets/aboutList.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","aboutList","react_default","a","createElement","className","onClick","window","open","App","console","log","map","item","iterator","key","src","pic","alt","Boolean","location","hostname","match","ReactDOM","render","src_components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,oLCEzBC,cAAA,CACb,qBACA,uBACA,+CACA,iCACA,sFACAC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWC,QAAS,kBAAMC,OAAOC,KAAK,+BAAgC,YAAtF,kDACA,mFACA,0EACA,8FACAN,EAAAC,EAAAC,cAAA,QAAMC,UAAU,WAAWC,QAAS,kBAAMC,OAAOC,KAAK,oGAAqG,YAA3J,iFCQaC,EAfH,WAER,OADFC,QAAQC,IAAI,qBAERT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QAAOH,EAAAC,EAAAC,cAAA,8BACrBH,EAAUW,IAAI,SAACC,EAAMC,GAAP,OAAoBZ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WAAWU,IAAMD,GAAYD,MAEjFX,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,OAAKY,IAAKC,IAAKC,IAAI,UCFTC,QACW,cAA7BZ,OAAOa,SAASC,UAEe,UAA7Bd,OAAOa,SAASC,UAEhBd,OAAOa,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOtB,EAAAC,EAAAC,cAACqB,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.b8b6143d.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/me.b6f4f010.png\";","import React from 'react';\n\nexport default [\n  \"I've been to China\",\n  \"I used to sing a lot\",\n  \"I used to live in Uruguay. Vamo Arriba no ma\",\n  \"I'm married with a kid and dog\",\n  \"My wife is awesome. She teaches economics and researches the economics in education\",\n  <span className='linkText' onClick={() => window.open('https://github.com/discodane', '_blank')}>Here I have a lot of ambitious/unfinished work</span>,\n  \"I used to be a full stack developer at Walmart, where we helped people buy stuff\",\n  \"I worked as a full stack developer at iFit, where we helped people move\",\n  \"I currently help develop an app called Drive at J.B. Hunt, which helps people move... stuff\",\n  <span className='linkText' onClick={() => window.open('https://docs.google.com/document/d/1eOoBIPB7-oQ2ob2iFZtwx2VK9y2p9bL_AtXaP-JE50Y/export?format=pdf', '_blank')}>Extra details about my exciting work life can be found here</span>,\n]","import React from 'react';\nimport './App.css';\nimport aboutList from '../assets/aboutList';\nimport pic from '../assets/images/me.png';\n\nconst App = () =>  {\n  console.log('this is happening')\n    return (\n      <div className=\"content\">\n        <div className='text'>\n          <div className=\"name\"><span>Dane Erickson</span></div>\n          {aboutList.map((item, iterator) => <div className=\"listItem\" key={ iterator }>{item}</div>)}\n        </div>\n        <div className=\"image\">\n          <img src={pic} alt=\"me\" />\n        </div>\n    </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}